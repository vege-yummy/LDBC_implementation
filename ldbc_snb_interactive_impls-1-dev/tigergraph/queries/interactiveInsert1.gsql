CREATE OR REPLACE QUERY interactiveInsert1  (
    UINT personId,
    STRING personFirstName,
    STRING personLastName,
    STRING gender,
    INT birthday,
    INT creationDate,
    STRING locationIP,
    STRING browserUsed,
    UINT cityId, // TODO XXX shouldn't this be a vertex param?
    SET<STRING> languages,
    SET<STRING> emails,
    SET<VERTEX<Tag>> tagIds,
    STRING studyAt, // this is an array marshalled as vertex_id1,year1;vertex_id2,year2 string (, ;)
    STRING workAt // this is an array marshalled as vertex_id1,year1;vertex_id2,year2 string (, ;)
  ) SYNTAX v2 {

    // persist the person and its location
    INSERT INTO Person VALUES(personId, personFirstName, personLastName, gender, birthday, creationDate, locationIP, browserUsed, languages, emails);
    INSERT INTO IS_LOCATED_IN (FROM, TO) VALUES(personId Person, cityId City);
    // add interests
    tmp = {tagIds};
    tmp =
        SELECT v FROM tmp:v
        ACCUM INSERT INTO HAS_INTEREST (FROM, TO) VALUES(personId, v);

    MapAccum<INT,INT> @@study, @@work;
    if studyAt IS NOT NULL THEN
        @@study = string_to_map(studyAt);

        FOREACH (t,y) IN @@study DO
            INSERT INTO STUDY_AT (FROM, TO, classYear) VALUES(personId, t, y);
        END;
    END;

    if workAt IS NOT NULL THEN
        @@work = string_to_map(workAt);
        FOREACH (t,y) IN @@work DO
            INSERT INTO WORK_AT (FROM, TO, workFrom) VALUES(personId, t, y);
        END;
    END;
}