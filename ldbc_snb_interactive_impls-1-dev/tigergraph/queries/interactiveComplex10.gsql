CREATE OR REPLACE QUERY interactiveComplex10(vertex<Person> personId, int month) SYNTAX v2 {
  TYPEDEF TUPLE<INT personId, STRING personFirstName, STRING personLastName, INT commonInterestScore, STRING personGender, STRING personCityName> friendInfo;
  HeapAccum<friendInfo>(10, commonInterestScore DESC, personId ASC) @@result;
  SumAccum<int> @commonInterestScore;
  SumAccum<string> @city;
  OrAccum @visited, @hasInterest;
  int nextMonth;

  nextMonth = 1 + month % 12;
  
  S = { personId };
  F = 
    SELECT p FROM S:s -(KNOWS)- Person:p 
    ACCUM s.@visited += true, p.@visited += true;
  F2 =
    SELECT p
    FROM F:f -(KNOWS)- Person:p  -(IS_LOCATED_IN>)- City:c
    WHERE p.@visited == false
          AND ((day(epoch_to_datetime(p.birthday / 1000)) >= 21 AND month(epoch_to_datetime(p.birthday/1000)) == month) OR
               (day(epoch_to_datetime(p.birthday / 1000)) < 22 AND month(epoch_to_datetime(p.birthday/1000)) == nextMonth))
    PER(p,c)
    ACCUM p.@city = c.name;
  
  tmp = 
    SELECT t
    FROM S:s-(HAS_INTEREST>)-  Tag:t 
    ACCUM t.@hasInterest += true;        
  
  tmp = 
    SELECT p 
    FROM F2:f -(<HAS_CREATOR)- Post:p -(HAS_TAG>)-Tag:t 
    WHERE t.@hasInterest    
    PER(p)
    ACCUM p.@hasInterest += true;
            
  tmp  =
    SELECT f
    FROM F2:f -(<HAS_CREATOR)- Post:p
    ACCUM
      IF p.@hasInterest == true THEN
        f.@commonInterestScore += 1
      ELSE
        f.@commonInterestScore += (-1)
      END;
    
  F2 =
    SELECT v FROM F2:v
    ACCUM @@result += friendInfo(v.id, v.firstName, v.lastName, v.@commonInterestScore, v.gender, v.@city);
  PRINT @@result as result;
}

